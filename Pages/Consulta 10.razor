@page "/Consulta10"
@inject IJSRuntime JSRuntime
@implements IDisposable

<header>
    <div class="alert alert-secondary mt-4" role="alert">
        <center>
            <b>Mostrar el cliente que mas dinero ha gastado, mostrar los datos del cliente, la cantidad de ordenes y el total de la misma. (un solo cliente)</b>
        </center>
    </div>
</header>

<section class="container-fluid">
    <table class="table table-bordered table-hover" id="example">
        <thead class="thead-dark">
            <tr>
                <th>ID del cliente</th>
                <th>Nombres</th>
                <th>Total de la orden</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var o in db.OrderDetails
            .Include(od => od.Order)
            .Include(od => od.Order.Customer)
            .AsEnumerable()
            .GroupBy(od => od.Order.Customer.Id)
            .Select(od => new {
            ID = od.First().Order.Customer.Id,
            Name = $"{od.First().Order.Customer.FirstName} {od.First().Order.Customer.LastName}",
            Total = od.Sum(od => od.Quantity * od.UnitPrice)
            })
            .OrderByDescending(od => od.Total)
            .Take(1)
            )
            {
                <tr>
                    <td>@o.ID</td>
                    <td>@o.Name</td>
                    <td>@o.Total</td>
                </tr>
            }
        </tbody>
    </table>
</section>

@code{
    northwindContext db = new northwindContext();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
    }
    void IDisposable.Dispose()
    {
        JSRuntime.InvokeAsync<object>("TestDataTablesRemove", "#example");
    }
}
