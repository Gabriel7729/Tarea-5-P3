@page "/Consulta6"
@inject IJSRuntime JSRuntime
@implements IDisposable


<header>
    <div class="alert alert-secondary mt-4" role="alert">
        <center>
            <b>Los 10 clientes que mas han comprado, mostrando el codigo, nombre y monto total vendido. </b>
        </center>
    </div>
</header>

<section class="container-fluid">
    <table class="table table-bordered table-hover" id="example">
        <thead class="thead-dark">
            <tr>
                <th>Código</th>
                <th>Nombre</th>
                <th>Monto total vendido</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var o in db.OrderDetails
          .Include(p => p.Order)
          .Include(c => c.Order.Customer)
          .AsEnumerable()
          .GroupBy(od => od.Order.CustomerId)
          .Select(od => new
          {
              Codigo = od.Select(c => c.Order.Customer.Id).First(),
              Name = od.Select(c => $"{c.Order.Customer.FirstName} {c.Order.Customer.LastName}").First(),
              Money_Spent = od.Sum(m => m.Quantity * m.UnitPrice)
          })
          .OrderByDescending(od => od.Money_Spent)
          .Take(10))
            {
                <tr>
                    <td>@o.Codigo</td>
                    <td>@o.Name</td>
                    <td>@o.Money_Spent</td>
                </tr>
            }
        </tbody>
    </table>
</section>

@code{
    northwindContext db = new northwindContext();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
    }
    void IDisposable.Dispose()
    {
        JSRuntime.InvokeAsync<object>("TestDataTablesRemove", "#example");
    }
}
