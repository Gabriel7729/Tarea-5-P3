@page "/Consulta5"
@inject IJSRuntime JSRuntime
@implements IDisposable

<header>
    <div class="alert alert-secondary mt-4" role="alert">
        <center>
            <b>Las unidades vendidas de cada producto, mostradas de mayor a menor: producto y cantidad de unidades vendidas.</b>
        </center>
    </div>
</header>

<section class="container-fluid">
    <table class="table table-bordered table-hover" id="example">
        <thead class="thead-dark">
            <tr>
                <th>Producto</th>
                <th>Cantidad de unidades vendidas</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in GetUnitProducts())
            {
                <tr>
                    <td>@item.NombreProducto</td>
                    <td>@item.CantidadProducto</td>
                </tr>
            }
        </tbody>
    </table>
</section>

@code{
    northwindContext db = new northwindContext();

    dynamic GetUnitProducts() => new northwindContext().PurchaseOrderDetails.
    Include(p => p.Product).
    GroupBy(x => x.Product.ProductName).
    Select(group => new { NombreProducto = group.Key, CantidadProducto = group.Sum(x => x.Quantity) }).
    OrderByDescending(x => x.CantidadProducto);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
    }
    void IDisposable.Dispose()
    {
        JSRuntime.InvokeAsync<object>("TestDataTablesRemove", "#example");
    }
}
